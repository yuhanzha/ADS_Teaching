{
    "collab_server" : "",
    "contents" : "library(shiny)\nlibrary(choroplethr)\nlibrary(choroplethrZip)\nlibrary(dplyr)\n\n## Define Manhattan's neighborhood\nman.nbhd=c(\"all neighborhoods\", \"Central Harlem\", \"Chelsea and Clinton\",\n           \"East Harlem\", \"Gramercy Park and Murray Hill\",\n           \"Greenwich Village and Soho\", \"Lower Manhattan\",\n           \"Lower East Side\", \"Upper East Side\", \"Upper West Side\",\n           \"Inwood and Washington Heights\")\nzip.nbhd=as.list(1:length(man.nbhd))\nzip.nbhd[[1]]=as.character(c(10026, 10027, 10030, 10037, 10039))\nzip.nbhd[[2]]=as.character(c(10001, 10011, 10018, 10019, 10020))\nzip.nbhd[[3]]=as.character(c(10036, 10029, 10035))\nzip.nbhd[[4]]=as.character(c(10010, 10016, 10017, 10022))\nzip.nbhd[[5]]=as.character(c(10012, 10013, 10014))\nzip.nbhd[[6]]=as.character(c(10004, 10005, 10006, 10007, 10038, 10280))\nzip.nbhd[[7]]=as.character(c(10002, 10003, 10009))\nzip.nbhd[[8]]=as.character(c(10021, 10028, 10044, 10065, 10075, 10128))\nzip.nbhd[[9]]=as.character(c(10023, 10024, 10025))\nzip.nbhd[[10]]=as.character(c(10031, 10032, 10033, 10034, 10040))\n\n## Load housing data\nload(\"../output/count.RData\")\nload(\"../output/mh2009use.RData\")\n\n# Define server logic required to draw a histogram\nshinyServer(function(input, output) {\n  \n  ## Neighborhood name\n  output$text = renderText({\"Selected:\"})\n  output$text1 = renderText({\n      paste(\"{ \", man.nbhd[as.numeric(input$nbhd)+1], \" }\")\n  })\n  \n  ## Panel 1: summary plots of time trends, unit price and full price of sales. \n  output$distPlot <- renderPlot({\n    \n    ## First filter data for selected neighborhood\n    mh2009.sel=mh2009.use\n    if(input$nbhd>0){\n      mh2009.sel=mh2009.use%>%\n                  filter(region %in% zip.nbhd[[as.numeric(input$nbhd)]])\n    }\n    \n    ## Monthly counts\n    month.v=as.vector(table(mh2009.sel$sale.month))\n    \n    ## Price: unit (per sq. ft.) and full\n    type.price=data.frame(bldg.type=c(\"10\", \"13\", \"25\", \"28\"))\n    type.price.sel=mh2009.sel%>%\n                group_by(bldg.type)%>%\n                summarise(\n                  price.mean=mean(sale.price, na.rm=T),\n                  price.median=median(sale.price, na.rm=T),\n                  unit.mean=mean(unit.price, na.rm=T),\n                  unit.median=median(unit.price, na.rm=T),\n                  sale.n=n()\n                )\n    type.price=left_join(type.price, type.price.sel, by=\"bldg.type\")\n    \n    ## Making the plots\n    layout(matrix(c(1,1,1,1,2,2,3,3,2,2,3,3), 3, 4, byrow=T))\n    par(cex.axis=1.3, cex.lab=1.5, \n        font.axis=2, font.lab=2, col.axis=\"dark gray\", bty=\"n\")\n    \n    ### Sales monthly counts\n    plot(1:12, month.v, xlab=\"Months\", ylab=\"Total sales\", \n         type=\"b\", pch=21, col=\"black\", bg=\"red\", \n         cex=2, lwd=2, ylim=c(0, max(month.v,na.rm=T)*1.05))\n    \n    ### Price per square foot\n    plot(c(0, max(type.price[,c(4,5)], na.rm=T)), \n         c(0,5), \n         xlab=\"Price per square foot\", ylab=\"\", \n         bty=\"l\", type=\"n\")\n    text(rep(0, 4), 1:4+0.5, paste(c(\"coops\", \"condos\", \"luxury hotels\", \"comm. condos\"), \n                                  type.price$sale.n, sep=\": \"), adj=0, cex=1.5)\n    points(type.price$unit.mean, 1:nrow(type.price), pch=16, col=2, cex=2)\n    points(type.price$unit.median, 1:nrow(type.price),  pch=16, col=4, cex=2)\n    segments(type.price$unit.mean, 1:nrow(type.price), \n              type.price$unit.median, 1:nrow(type.price),\n             lwd=2)    \n    \n    ### full price\n    plot(c(0, max(type.price[,-1], na.rm=T)), \n         c(0,5), \n         xlab=\"Sales Price\", ylab=\"\", \n         bty=\"l\", type=\"n\")\n    text(rep(0, 4), 1:4+0.5, paste(c(\"coops\", \"condos\", \"luxury hotels\", \"comm. condos\"), \n                                   type.price$sale.n, sep=\": \"), adj=0, cex=1.5)\n    points(type.price$price.mean, 1:nrow(type.price), pch=16, col=2, cex=2)\n    points(type.price$price.median, 1:nrow(type.price),  pch=16, col=4, cex=2)\n    segments(type.price$price.mean, 1:nrow(type.price), \n             type.price$price.median, 1:nrow(type.price),\n             lwd=2)    \n  })\n  \n  ## Panel 2: map of sales distribution\n  output$distPlot1 <- renderPlot({\n    count.df.sel=count.df\n    if(input$nbhd>0){\n      count.df.sel=count.df%>%\n        filter(region %in% zip.nbhd[[as.numeric(input$nbhd)]])\n    }\n    # make the map for selected neighhoods\n    \n    zip_choropleth(count.df.sel,\n                   title       = \"2009 Manhattan housing sales\",\n                   legend      = \"Number of sales\",\n                   county_zoom = 36061)\n  })\n})",
    "created" : 1474578727456.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3448563819",
    "id" : "F721DC28",
    "lastKnownWriteTime" : 1472770102,
    "last_content_update" : 1472770102,
    "path" : "~/Dropbox/Tian_Teaching/G5243-ADS/Projects/Fall2016/Project2_OpenDataNYC/app/server.R",
    "project_path" : "app/server.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}